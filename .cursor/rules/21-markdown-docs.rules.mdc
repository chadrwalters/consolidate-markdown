---
description:
globs:
---
---
title: Markdown Documentation Rules
version: 1.0.0
date: 2025-01-31
status: Active
dependencies:
  - 00-base.rules.mdc
  - 20-markdown-style.rules.mdc
patterns:
  inherit:
    - markdown.documentation
    - operations.documentation
  local:
    docs:
      - "docs/**/*.md"
      - "*.md"
    exclude:
      - "tests/**/*.md"
      - "temp/**/*.md"
---

# Markdown Documentation Rules
# Version: 1.0.0
# Purpose: Define documentation requirements and processes
# @since: 1.0.0
# @updated: 2025-01-31
# @requires: @rule(20-markdown-style.rules.mdc:formatting_standards)

# <section: metadata>
metadata:
    version_history:
        1.0.0:
            date: "2025-01-31"
            changes:
                - "Initial version"
                - "Established documentation standards"
                - "Added workflow requirements"
                - "Defined review process"

    dependencies:
        - "@rule(00-base.rules.mdc:documentation_standards)"
        - "@rule(20-markdown-style.rules.mdc:formatting_standards)"
# </section: metadata>

# <section: documentation_requirements>
# @purpose: Define core documentation requirements
documentation_requirements:
    essential_docs:
        - "README.md: Project overview"
        - "CONTRIBUTING.md: Contribution guide"
        - "CHANGELOG.md: Version history"
        - "LICENSE: Project license"
        - "docs/: Detailed documentation"

    content_standards:
        - "Clear and concise writing"
        - "Consistent terminology"
        - "Complete examples"
        - "Proper attribution"
        - "Regular updates"

    organization:
        - "Logical structure"
        - "Clear navigation"
        - "Consistent formatting"
        - "Proper categorization"
        - "Easy maintenance"

# <section: update_procedures>
# @purpose: Define documentation update processes
update_procedures:
    triggers:
        - "Code changes"
        - "Feature additions"
        - "Bug fixes"
        - "Process changes"
        - "External updates"

    workflow:
        - "Review affected docs"
        - "Update content"
        - "Verify changes"
        - "Update references"
        - "Version control"

    validation:
        - "Technical accuracy"
        - "Formatting compliance"
        - "Link validation"
        - "Example testing"
        - "Peer review"

# <section: example_formats>
# @purpose: Define documentation example standards
example_formats:
    code_examples:
        - "Include language identifier"
        - "Use meaningful names"
        - "Add comments"
        - "Show output"
        - "Test all examples"

    tutorials:
        - "Step-by-step instructions"
        - "Clear prerequisites"
        - "Expected outcomes"
        - "Troubleshooting tips"
        - "Complete solutions"

    api_examples:
        - "Request/response pairs"
        - "Authentication examples"
        - "Error handling"
        - "Common use cases"
        - "Best practices"

# <section: documentation_workflow>
# @purpose: Define documentation development process
documentation_workflow:
    planning:
        - "Identify audience"
        - "Define scope"
        - "Set objectives"
        - "Plan structure"
        - "Allocate resources"

    development:
        - "Create outline"
        - "Write content"
        - "Add examples"
        - "Include diagrams"
        - "Review drafts"

    review:
        - "Technical review"
        - "Editorial review"
        - "User testing"
        - "Feedback collection"
        - "Final approval"

# <section: review_process>
# @purpose: Define documentation review requirements
review_process:
    technical_review:
        - "Accuracy check"
        - "Code validation"
        - "API correctness"
        - "Security review"
        - "Performance impact"

    editorial_review:
        - "Grammar check"
        - "Style compliance"
        - "Clarity review"
        - "Consistency check"
        - "Format validation"

    approval_flow:
        - "Author submission"
        - "Technical review"
        - "Editorial review"
        - "Stakeholder approval"
        - "Publication"

# <section: versioning>
# @purpose: Define documentation versioning guidelines
versioning:
    version_control:
        - "Use semantic versioning"
        - "Track changes"
        - "Maintain history"
        - "Tag releases"
        - "Archive versions"

    change_tracking:
        - "Update CHANGELOG.md"
        - "Document breaking changes"
        - "Version metadata"
        - "Migration guides"
        - "Deprecation notices"

# <section: api_documentation>
# @purpose: Define API documentation standards
api_documentation:
    structure:
        - "Overview"
        - "Authentication"
        - "Endpoints"
        - "Parameters"
        - "Responses"

    requirements:
        - "Complete endpoint docs"
        - "Request examples"
        - "Response schemas"
        - "Error handling"
        - "Rate limits"

    examples:
        - "Curl commands"
        - "Language examples"
        - "Response samples"
        - "Error examples"
        - "Use cases"

# <section: generation>
# @purpose: Define documentation generation requirements
generation:
    tools:
        - "MkDocs for sites"
        - "Sphinx for Python"
        - "JSDoc for JavaScript"
        - "Swagger for APIs"
        - "Doxygen for C++"

    requirements:
        - "Automated builds"
        - "Version control"
        - "Search support"
        - "Theme consistency"
        - "Mobile support"

# <section: search_optimization>
# @purpose: Define documentation search requirements
search_optimization:
    metadata:
        - "Clear titles"
        - "Descriptive headings"
        - "Relevant keywords"
        - "Proper tagging"
        - "Good descriptions"

    structure:
        - "Logical hierarchy"
        - "Clear navigation"
        - "Cross-references"
        - "Related content"
        - "Search hints"

# <section: best_practices>
# @purpose: Define documentation best practices
best_practices:
    writing:
        - "Be clear and concise"
        - "Use active voice"
        - "Include examples"
        - "Target audience"
        - "Regular updates"

    organization:
        - "Logical structure"
        - "Easy navigation"
        - "Consistent format"
        - "Version control"
        - "Regular review"

    maintenance:
        - "Regular updates"
        - "Link validation"
        - "Content review"
        - "Version sync"
        - "User feedback"
