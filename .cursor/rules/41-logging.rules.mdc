---
description:
globs:
---
---
title: Logging Rules
version: 1.0.0
date: 2025-01-31
status: Active
dependencies:
  - 00-base.rules.mdc
  - 40-error-handling.rules.mdc
patterns:
  inherit:
    - python.source
  local:
    logs:
      - "logs/**/*.log"
      - "src/**/logging.py"
    exclude:
      - "logs/archive/**"
      - "logs/temp/**"
---

# Logging Rules
# Version: 1.0.0
# Purpose: Define logging standards and practices
# @since: 1.0.0
# @updated: 2025-01-31
# @requires: @rule(40-error-handling.rules.mdc:error_reporting)

# <section: metadata>
metadata:
    version_history:
        1.0.0:
            date: "2025-01-31"
            changes:
                - "Initial version"
                - "Established log levels"
                - "Added format standards"
                - "Defined rotation policies"

    dependencies:
        - "@rule(00-base.rules.mdc:code_standards)"
        - "@rule(40-error-handling.rules.mdc:error_reporting)"
# </section: metadata>

# <section: log_levels>
# @purpose: Define logging levels and their usage
log_levels:
    debug:
        purpose: "Detailed information for debugging"
        usage:
            - "Variable values"
            - "Function entry/exit"
            - "State changes"
            - "Performance data"
            - "Temporary debugging"

    info:
        purpose: "General operational events"
        usage:
            - "Application startup"
            - "Configuration loaded"
            - "Task completion"
            - "State transitions"
            - "User actions"

    warning:
        purpose: "Potential issues or unexpected states"
        usage:
            - "Deprecated features"
            - "Resource usage high"
            - "Missing optional data"
            - "Slow performance"
            - "Recovery attempts"

    error:
        purpose: "Error events that might still allow operation"
        usage:
            - "Exception caught"
            - "Task failure"
            - "Connection issues"
            - "Data validation"
            - "Resource unavailable"

    critical:
        purpose: "Critical events causing system failure"
        usage:
            - "Application crash"
            - "Data corruption"
            - "Security breach"
            - "Resource exhaustion"
            - "System halt"

# <section: format_standards>
# @purpose: Define log message formatting standards
format_standards:
    message_template: |
        {timestamp} [{level}] {logger}: {message} {context}

    timestamp_format: "ISO 8601 (YYYY-MM-DD HH:mm:ss.sssÂ±ZZZZ)"

    structured_format: |
        {
            "timestamp": "2025-01-31T10:30:00.000Z",
            "level": "ERROR",
            "logger": "app.module",
            "message": "Operation failed",
            "context": {
                "operation": "data_process",
                "user_id": "12345",
                "error_code": "ERR001"
            }
        }

    context_data:
        required:
            - "timestamp"
            - "level"
            - "logger"
            - "message"
        optional:
            - "correlation_id"
            - "user_id"
            - "session_id"
            - "request_id"
            - "version"

# <section: rotation_policies>
# @purpose: Define log file management policies
rotation_policies:
    triggers:
        - "Size: 100MB per file"
        - "Time: Daily rotation"
        - "Application restart"
        - "Manual rotation"
        - "Error threshold"

    retention:
        - "7 days of daily logs"
        - "4 weeks of weekly logs"
        - "12 months of monthly logs"
        - "Compress archived logs"
        - "Secure deletion"

    naming:
        pattern: "{app}-{YYYY-MM-DD}.log[.gz]"
        example: "myapp-2025-01-31.log.gz"

# <section: aggregation>
# @purpose: Define log collection and processing
aggregation:
    collection:
        - "Centralized logging"
        - "Structured format"
        - "Secure transport"
        - "Buffer handling"
        - "Failure recovery"

    processing:
        - "Parse structured data"
        - "Enrich context"
        - "Correlate events"
        - "Filter sensitive data"
        - "Index for search"

    storage:
        - "Compressed archives"
        - "Searchable index"
        - "Backup strategy"
        - "Retention policy"
        - "Access control"

# <section: monitoring>
# @purpose: Define log monitoring requirements
monitoring:
    metrics:
        - "Error rate"
        - "Log volume"
        - "Response time"
        - "Resource usage"
        - "User activity"

    alerts:
        - "Error threshold"
        - "Pattern detection"
        - "Resource limits"
        - "Security events"
        - "System health"

    dashboards:
        - "Error overview"
        - "Performance metrics"
        - "User activity"
        - "Resource usage"
        - "System health"

# <section: configuration>
# @purpose: Define logging configuration standards
configuration:
    setup:
        - "Environment-based config"
        - "Log level control"
        - "Handler configuration"
        - "Format definition"
        - "Path management"

    handlers:
        - "Console output"
        - "File rotation"
        - "Network transport"
        - "Error notification"
        - "Debug capture"

    integration:
        - "Framework integration"
        - "Library configuration"
        - "Third-party handlers"
        - "Custom formatters"
        - "Context processors"

# <section: best_practices>
# @purpose: Define logging best practices
best_practices:
    general:
        - "Consistent formatting"
        - "Appropriate levels"
        - "Contextual information"
        - "Performance impact"
        - "Security awareness"

    implementation:
        - "Logger hierarchy"
        - "Context managers"
        - "Exception handling"
        - "Resource cleanup"
        - "Thread safety"

    maintenance:
        - "Regular rotation"
        - "Log analysis"
        - "Storage monitoring"
        - "Format validation"
        - "Configuration review"
