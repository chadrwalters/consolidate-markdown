---
description:
globs:
---
# AI Startup Procedure Rules
# Version: 1.0.0
# Purpose: Define the standardized startup procedure for AI interactions
# @since: 1.0.0
# @updated: 2024-02-02
# @requires: @rule(00-base.rules.mdc:mdc_processing)

# <section: metadata>
metadata:
    version_history:
        1.0.0:
            date: "2024-02-02"
            changes:
                - "Initial version"
                - "Established startup sequence"
                - "Defined required checks"

    dependencies:
        - "@rule(00-base.rules.mdc:file_management)"
        - "@rule(00-base.rules.mdc:validation)"

# <section: startup_sequence>
# @purpose: Define the mandatory startup sequence for AI
startup_sequence:
    1_rules_review:
        - "Fetch and process all available rules"
        - "Note any rule dependencies"
        - "Verify rule version compatibility"

    2_documentation_review:
        - "Examine docs/ directory contents"
        - "Review key documentation files:"
        - "  - README.md"
        - "  - architecture.md"
        - "  - prd.md"
        - "  - configuration.md"

    3_plan_mode_initialization:
        - "Enter PLAN mode"
        - "Review current project state"
        - "Identify incomplete tasks"
        - "Note any blockers or dependencies"

    4_code_review:
        - "Examine relevant code based on plan state"
        - "Note key files and their purposes"
        - "Identify potential areas needing attention"

    5_status_report:
        - "Confirm PLAN mode active"
        - "Summarize remaining plan items"
        - "Request user direction for next steps"

# <section: validation_rules>
# @purpose: Define validation requirements for startup
validation_rules:
    rules_check:
        - "All available rules must be fetched"
        - "Rule dependencies must be verified"
        - "Rule conflicts must be identified"

    docs_check:
        - "All documentation must be accessible"
        - "Key docs must be identified"
        - "Documentation hierarchy understood"

    plan_check:
        - "Plan mode must be properly initialized"
        - "Current state must be clear"
        - "Next steps must be identified"

# <section: completion_criteria>
# @purpose: Define when startup is complete
completion_criteria:
    - "All rules processed"
    - "Documentation reviewed"
    - "Plan mode active"
    - "Current state understood"
    - "Ready for user direction"

# <section: prohibited_actions>
# @purpose: Define what cannot be done during startup
prohibited_actions:
    - "No code modifications during startup"
    - "No direct task execution until startup complete"
    - "No skipping of startup steps"

# <section: examples>
# @purpose: Provide examples of proper startup sequence
# @example: |
#   1. AI starts new conversation
#   2. Fetches all rules starting with 00-base.rules.mdc
#   3. Reviews docs/README.md and related docs
#   4. Enters PLAN mode
#   5. Reports status and awaits direction
# </section: examples>

# <section: command_triggers>
# @purpose: Define startup command patterns
# @requires: @rule(70-command-triggers.rules.mdc:trigger_patterns)
command_triggers:
    startup:
        pattern: "^-startup\\b"
        description: "Trigger AI startup sequence"
        examples:
            - "-startup"
        actions:
            - "Execute rules_review"
            - "Execute documentation_review"
            - "Enter PLAN mode"
            - "Execute code_review"
            - "Report status"

    alternative_triggers:
        - "-init"  # Alternative command that also triggers startup
        - "-plan"  # Automatically run startup before entering plan mode

    command_chaining:
        - "When -plan is used without prior startup, run startup first"
        - "When -init or -startup is used, automatically enter PLAN mode after completion"
# </section: command_triggers>
